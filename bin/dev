#!/usr/bin/env bash
# NOTE:
# Use /usr/bin/env to find shell interpreter for better portability.
# Reference: https://en.wikipedia.org/wiki/Shebang_%28Unix%29#Portability

# NOTE:
# Exit immediately if any commands (even in pipeline)
# exits with a non-zero status.
set -e
set -o pipefail

# WARNING:
# This is not reliable when using POSIX sh
# and current script file is sourced by `source` or `.`
CURRENT_SOURCE_FILE_PATH="${BASH_SOURCE[0]:-$0}"
CURRENT_SOURCE_FILE_NAME="$(basename -- "$CURRENT_SOURCE_FILE_PATH")"

# shellcheck disable=SC2016
USAGE="$CURRENT_SOURCE_FILE_NAME"'

Setup project development environment.
This script detects the build system of the project
then build and test the project.

Run this script to setup your development environment
or after you make changes to the project,
to check whether you build the project correctly.

'"
Usage:
  $CURRENT_SOURCE_FILE_NAME -h
  $CURRENT_SOURCE_FILE_NAME
  $CURRENT_SOURCE_FILE_NAME [BUILD_SYSTEM] [OPTIONS]

Build systems:
  autotools
  cmake
  meson
  go
  cargo
  npm

Options:
  -h	Show this screen.
  -v    Show version."

CURRENT_SOURCE_FILE_DIR="$(dirname -- "$CURRENT_SOURCE_FILE_PATH")"
CURRENT_SOURCE_FILE_PREFIX="$CURRENT_SOURCE_FILE_DIR"/..
CURRENT_SOURCE_FILE_DATADIR="$CURRENT_SOURCE_FILE_PREFIX"/share

. "$CURRENT_SOURCE_FILE_DATADIR"/dev/dev-utils

function main() {
	while getopts ':hv' option; do
		case "$option" in
		h)
			echo "$USAGE"
			exit
			;;
		v)
			echo "v0.1.0"
			exit
			;;
		*)
			true
			;;
		esac
	done
	shift $((OPTIND - 1))

	local build_system="$1"
	shift || true

	if [ -n "$build_system" ]; then
		if [ ! -f "$CURRENT_SOURCE_FILE_DATADIR"/dev/dev-"$build_system" ]; then
			log "[ERROR] Unsupported build system: $build_system"
			false
		fi
		exec bash "$CURRENT_SOURCE_FILE_DATADIR"/dev/dev-"$build_system" "$@"
	fi

	if [ -f "$PWD"/autogen.sh ] ||
		[ -f "$PWD"/configure.ac ] ||
		[ -f "$PWD"/Makefile ]; then
		log "[INFO] Detected autotools"
		exec bash "$CURRENT_SOURCE_FILE_DATADIR"/dev/dev-autotools "$@"
	fi

	if [ -f "$PWD"/CMakeLists.txt ]; then
		log "[INFO] Detected cmake"
		exec bash "$CURRENT_SOURCE_FILE_DATADIR"/dev/dev-cmake "$@"
	fi

	if [ -f "$PWD"/go.mod ]; then
		log "[INFO] Detected golang"
		exec bash "$CURRENT_SOURCE_FILE_DATADIR"/dev/dev-go "$@"
	fi

	if [ -f "$PWD"/Cargo.toml ]; then
		log "[INFO] Detected cargo"
		exec bash "$CURRENT_SOURCE_FILE_DATADIR"/dev/dev-cargo "$@"
	fi

	if [ -f "$PWD"/package-lock.json ]; then
		log "[INFO] Detected npm"
		exec bash "$CURRENT_SOURCE_FILE_DATADIR"/dev/dev-npm "$@"
	fi

	log "[ERROR] Failed to detect build system"
	false
}

main "$@"
